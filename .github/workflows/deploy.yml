name: Deploy to GitHub Pages & Digital Ocean

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build static site
        run: npm run build

      # Deploy to GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          static_site_generator: next

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4

      # Deploy the same build to Digital Ocean
      - name: Create Digital Ocean package
        run: |
          tar -czf site.tar.gz -C out .

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DO_SSH_PRIVATE_KEY }}

      - name: Deploy to Digital Ocean
        run: |
          # Add server to known hosts
          ssh-keyscan -H ${{ secrets.DO_SERVER_IP }} >> ~/.ssh/known_hosts

          # Upload and extract
          scp site.tar.gz ${{ secrets.DO_SSH_USER }}@${{ secrets.DO_SERVER_IP }}:~/

          ssh ${{ secrets.DO_SSH_USER }}@${{ secrets.DO_SERVER_IP }} << 'EOF'
            # Go to web directory (usually /var/www/html or similar)
            cd ${{ secrets.DO_WEB_PATH || '/var/www/html' }}
            
            # Backup current site
            sudo mkdir -p backups
            sudo mv * backups/backup-$(date +%Y%m%d-%H%M%S)/ 2>/dev/null || true
            
            # Extract new site
            sudo tar -xzf ~/site.tar.gz
            sudo chown -R www-data:www-data .
            sudo chmod -R 755 .
            
            # Cleanup
            rm ~/site.tar.gz
            
            echo "Deployment completed successfully!"
          EOF

      - name: Verify deployment
        run: |
          echo "ðŸŽ‰ Deployment completed!"
          echo "GitHub Pages: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
          echo "Digital Ocean: ${{ secrets.DO_APP_URL || 'Your DO URL' }}"

concurrency:
  group: "deployment"
  cancel-in-progress: false
